<?php

namespace Tests\Feature;

use App\Models\Client;
use App\Models\Invoice;
use App\Models\Order;
use App\Models\Shop;
use App\Models\User;
use App\Models\Warehouse;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class AgentCanCashInvoiceTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_user_can_cash_invoice()
    {
        $this->withoutExceptionHandling();
        $user = User::factory()->create();
        $invoice = Invoice::factory()->create();
        $invoice->cash($user);
        $this->assertNotEquals($invoice->total, $invoice->amount_left);
    }

    public function test_user_can_partially_cash_invoice()
    {
        $this->withoutExceptionHandling();
        $user = User::factory()->create();
        $invoice = Invoice::factory()->create();
        $invoice->cash($user, $invoice->total / 2);
        $this->assertNotEquals($invoice->total, $invoice->amount_left);
    }
}
